#include <iostream>
#include <vector>

using namespace std;

// Função para imprimir o tabuleiro
void imprimirTabuleiro(const vector<vector<char>>& tabuleiro) {
    for (const auto& linha : tabuleiro) {
        for (char celula : linha) {
            cout << celula << " ";
        }
        cout << endl;
    }
}

// Função para verificar se um jogador venceu
bool verificarVitoria(const vector<vector<char>>& tabuleiro, char jogador) {
    // Verificar linhas e colunas
    for (int i = 0; i < 3; ++i) {
        if ((tabuleiro[i][0] == jogador && tabuleiro[i][1] == jogador && tabuleiro[i][2] == jogador) ||
            (tabuleiro[0][i] == jogador && tabuleiro[1][i] == jogador && tabuleiro[2][i] == jogador)) {
            return true;
        }
    }

    // Verificar diagonais
    if ((tabuleiro[0][0] == jogador && tabuleiro[1][1] == jogador && tabuleiro[2][2] == jogador) ||
        (tabuleiro[0][2] == jogador && tabuleiro[1][1] == jogador && tabuleiro[2][0] == jogador)) {
        return true;
    }

    return false;
}

// Função para verificar se o tabuleiro está cheio (empate)
bool verificarEmpate(const vector<vector<char>>& tabuleiro) {
    for (const auto& linha : tabuleiro) {
        for (char celula : linha) {
            if (celula == ' ')
                return false; // Ainda há pelo menos uma célula vazia
        }
    }
    return true; // Todas as células estão ocupadas
}

int main() {
    vector<vector<char>> tabuleiro(3, vector<char>(3, ' ')); // Inicializa o tabuleiro vazio
    char jogadorAtual = 'X';

    cout << "Bem-vindo ao Jogo da Velha!" << endl;

    do {
        // Exibe o tabuleiro
        imprimirTabuleiro(tabuleiro);

        int linha, coluna;

        // Solicita a jogada do jogador
        cout << "Jogador " << jogadorAtual << ", informe a linha (0-2) e a coluna (0-2) separadas por espaço: ";
        cin >> linha >> coluna;

        // Verifica se a jogada é válida
        if (linha < 0 || linha >= 3 || coluna < 0 || coluna >= 3 || tabuleiro[linha][coluna] != ' ') {
            cout << "Jogada inválida. Tente novamente." << endl;
            continue;
        }

        // Realiza a jogada
        tabuleiro[linha][coluna] = jogadorAtual;

        // Verifica se o jogador atual venceu
        if (verificarVitoria(tabuleiro, jogadorAtual)) {
            cout << "Parabéns! Jogador " << jogadorAtual << " venceu!" << endl;
            imprimirTabuleiro(tabuleiro);
            break;
        }

        // Verifica empate
        if (verificarEmpate(tabuleiro)) {
            cout << "Empate! O jogo terminou sem vencedor." << endl;
            imprimirTabuleiro(tabuleiro);
            break;
        }

        // Troca para o próximo jogador
        jogadorAtual = (jogadorAtual == 'X') ? 'O' : 'X';

    } while (true);

    return 0;
}
